body {
  font-family: "Titillium Web", sans-serif;
  font-size: 1vw;
  height: auto;
  width: auto;
  padding: 0 0;
  margin: 0 0;
  background-color: #000000;
  overflow: hidden;
}

p {
  font-size: 1.7vh;
}

#canvasControls {
  background-color: transparent;
  position: absolute;
  top: inherit;
  left: inherit;
  z-index: 5;
  padding: 0;
  margin: 0px;
}

#controls {
  display: flex;
  flex-direction: row;
  position: fixed;
  left: 0;
  bottom: 0;
  z-index: 10;
  padding: 0.75vw 0.75vw;
  height: 5vh;
  width: 100%;
  background-color: black;
  border-top: 0.1em solid white;
  align-items: center;
}
label {
  color: #ffffff;
  font-family: "Titillium Web", sans-serif;
  font-size: inherit;
}

input {
  width: 5vw;
  height: 3.5vh;
  padding-right: 4px;
  font-size: inherit;
  margin: 0 0.75vw 0 0;
}

button {
  padding: 0.5vw 1vh;
  border: 1px solid #ffffff;
  background-color: #000000;
  margin: 0 0.75vw 0 0;
  border-radius: 0.12vw;
  box-sizing: border-box;
  text-decoration: none;
  font-family: "Titillium Web", sans-serif;
  font-weight: 300;
  font-size: inherit;
  color: #ffffff;
  text-align: center;
  transition: all 0.2s;
}
button:hover {
  color: #000000;
  background-color: #ffffff;
}

.spinner {
  display: none;
  width: 5vw;
  height: 3.5vh;
  text-align: center;
  font-size: 10px;
}

.spinner > div {
  background-color: #ffffff;
  height: 100%;
  width: 0.5vw;
  display: inline-block;

  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;
  animation: sk-stretchdelay 1.2s infinite ease-in-out;
}

.spinner .rect2 {
  -webkit-animation-delay: -1.1s;
  animation-delay: -1.1s;
}

.spinner .rect3 {
  -webkit-animation-delay: -1s;
  animation-delay: -1s;
}

.spinner .rect4 {
  -webkit-animation-delay: -0.9s;
  animation-delay: -0.9s;
}

.spinner .rect5 {
  -webkit-animation-delay: -0.8s;
  animation-delay: -0.8s;
}

@-webkit-keyframes sk-stretchdelay {
  0%,
  40%,
  100% {
    -webkit-transform: scaleY(0.4);
  }
  20% {
    -webkit-transform: scaleY(1);
  }
}

@keyframes sk-stretchdelay {
  0%,
  40%,
  100% {
    transform: scaleY(0.4);
    -webkit-transform: scaleY(0.4);
  }
  20% {
    transform: scaleY(1);
    -webkit-transform: scaleY(1);
  }
}

.modal {
  /* This way it could be display flex or grid or whatever also. */
  display: block;

  /* Probably need media queries here */
  width: 50%;
  max-width: 100%;

  height: 60%;
  max-height: 100%;

  position: fixed;

  z-index: 100;

  left: 50%;
  top: 50%;

  /* Use this for centering if unknown width/height */
  transform: translate(-50%, -50%);

  /* If known, negative margins are probably better (less chance of blurry text). */
  /* margin: -200px 0 0 -200px; */

  background: white;
  box-shadow: 0 0 60px 10px rgba(0, 0, 0, 0.9);
}
.closed {
  display: none;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 50;

  background: rgba(0, 0, 0, 0.6);
}
.modal-guts {
  position: absolute;
  top: 0;
  left: 0;
  overflow: auto;
  padding: 2em 2em 2em 2em;
}

.modal .close-button {
  position: absolute;

  /* don't need to go crazy with z-index here, just sits over .modal-guts */
  z-index: 1;

  top: 20px;

  /* needs to look OK with or without scrollbar */
  right: 20px;
}

#open-buttom {
  float: rigth;
}

#link {
  color: #000000;
  padding: 0 3px 0 3px;
}

#link:hover {
  background-color: #000000;
  color: #ffffff;
  transition: 400ms ease all;
}

#hl {
  background-color: #000000;
  color: #ffffff;
  padding: 0 3px 0 3px;
  border-radius: 3px;
}